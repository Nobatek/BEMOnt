@startuml

scale 0.8

skinparam class {
  ArrowColor DarkBlue
  ArrowFontColor DarkBlue
  BackgroundColor LightBlue
  BorderColor DarkGrey
}
skinparam dpi 300
skinparam stereotypeCBackgroundColor Wheat
skinparam classAttributeFontColor  Green

class System <<SSN>>{

}

class BuildingState <<HIT2GAP>>{

}

class BuildingSimpleState <<HIT2GAP>>{

}

class BuildingComplexState <<HIT2GAP>>{

}

class EnergyState <<HIT2GAP>>{

}

class ComfortState <<HIT2GAP>>{

}

class OccupantComfort <<HIT2GAP>>{

}

class OccupantDiscomfort <<HIT2GAP>>{

}
class Driver <<HIT2GAP>>{

}

class Observation <<SSN>> {
  externalStorageID xsd:string
}

class Property <<SSN>> {

}

class Sensor <<SSN>>

class IfcBuilding <<ifc>>
class IfcSensor <<ifc4>>
class IfcSensorType <<ifc>>

IfcBuilding --> BuildingState:hasState
System --> BuildingState: hasState
BuildingState <|-- BuildingSimpleState
BuildingState <|-- BuildingComplexState
BuildingComplexState <|-- EnergyState
BuildingComplexState <|-- ComfortState
ComfortState <|-- OccupantComfort
ComfortState <|-- OccupantDiscomfort
System --> System:ssn_hasSubsystem
System <|-- Sensor
Sensor --> Observation:ssn_observedBy
Sensor --> Property:ssn_observes
IfcSensor --> Sensor: owl:equivalentClass

Observation <|-- Driver

IfcSensor --> IfcSensorType: owl:equivalentClass

@enduml
